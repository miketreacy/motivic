openapi: 3.0.1
info:
    title: Motivic API
    version: 0.1.0
    description: >-
        This is a REST API for generating random musical motifs,
        transforming them via principles of Baroque counterpoint,
        and downloading them as WAV audio files.
    contact:
        email: michaelstreacy@gmail.com
    license:
        name: Apache 2.0
        url: http://www.apache.org/licenses/LICENSE-2.0.html
externalDocs:
    description: Find out more about the Motivic API
    url: https://motivic.io/api
servers:
    - url: https://motivic.io/api
      description: Production server
paths:
    /melody/random:
        post:
            summary: Generate a random motif based on user parameters
            operationId: randomizer
            requestBody:
                $ref: '#/components/requestBodies/RandomMotif'
            responses:
                '200':
                    description: A random motif
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/JsonApiResponse'
    /melody/transform:
        post:
            summary: Transforms a given motif with the given transformation parameters
            operationId: transformer
            requestBody:
                $ref: '#/components/requestBodies/TransformMotif'
            responses:
                '200':
                    description: A transformed motif
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/JsonApiResponse'
    /convertor:
        post:
            summary: Convert a JSON representation of a motif to a WAV file
            operationId: convertor
            requestBody:
                $ref: '#/components/requestBodies/MotifAudioFile'
            responses:
                '200':
                    description: A ZIP file containing a WAV file (audio/wav)
                    content:
                        application/zip:
                            schema:
                                type: string
                                format: binary
                '400':
                    description: Request body is empty, contains invalid JSON, or has a JSON value of the incorrect type
                '413':
                    description: Request body is too large. Request body must not be larger than 1MB
                '422':
                    description: Conversion failed due to an unprocessable entity
                '500':
                    description: Internal Server Error
                '504':
                    description: The request timed out
components:
    schemas:
        PitchValue:
            description: A number representing a pitch >= 1 ('c0') and <= 108 ('b8').
            type: integer
            format: int32
            minimum: 1
            maximum: 108
            example: 95
        NotePitchValue:
            description: The pitch value of a note. A value of `null` indicates that the note is a rest.
            nullable: true
            oneOf:
                - $ref: '#/components/schemas/PitchValue'
        Duration:
            description: Rhythmic duration in 64th notes.
            type: integer
            format: int32
            minimum: 1
            maximum: 64
            example: 5
        DurationDivision:
            description: An enumeration of standard rhythmic duration divisions in 64th notes ("1" represents a 64th note, "64" represents a whole note).
            type: integer
            format: int32
            enum:
                - 1
                - 2
                - 4
                - 8
                - 16
                - 32
                - 64
            example: 8
        DurationRange:
            description: A range of duration values for a motif.
            type: object
            properties:
                min:
                    $ref: '#/components/schemas/DurationDivision'
                max:
                    $ref: '#/components/schemas/DurationDivision'
        Octave:
            description: The octaves on a piano in scientific pitch notation.
            type: integer
            format: int32
            minimum: 0
            maximum: 8
            example: 4
        OctaveValue:
            description: The octave value of a note. A value of `null` indicates that the note is a rest.
            nullable: true
            oneOf:
                - $ref: '#/components/schemas/Octave'
        OctaveRange:
            description: A range of octaves for a motif.
            type: object
            properties:
                low:
                    $ref: '#/components/schemas/Octave'
                high:
                    $ref: '#/components/schemas/Octave'
        LeapRange:
            description: A range of melodic interval leaps for a motif.
            type: object
            properties:
                min:
                    type: integer
                    format: int32
                    minimum: 0
                    maximum: 11
                    example: 2
                max:
                    type: integer
                    format: int32
                    minimum: 2
                    maximum: 48
                    example: 12
        NoteName:
            description: The names of pitches in western music theory.
            type: string
            enum:
                - c
                - c#
                - d
                - d#
                - e
                - f
                - f#
                - g
                - g#
                - a
                - a#
                - b
            example: c
        NoteNameValue:
            description: The note name value of a note. A value of `null` indicates that the note is a rest.
            nullable: true
            oneOf:
                - $ref: '#/components/schemas/NoteName'
        Note:
            type: object
            properties:
                value:
                    $ref: '#/components/schemas/NotePitchValue'
                duration:
                    $ref: '#/components/schemas/Duration'
                octave:
                    $ref: '#/components/schemas/OctaveValue'
                name:
                    $ref: '#/components/schemas/NoteNameValue'
                pitch:
                    description: A scientific pitch notation string representing a specific pitch, such as 'c4', 'f#7', etc. A value of 'rest' indicates that the note is a rest.
                    type: string
                    example: c4
            required:
                - value
                - duration
                - octave
                - name
                - pitch
        MotifNote:
            allOf:
                - $ref: '#/components/schemas/Note'
                - type: object
                  properties:
                      steps:
                          type: integer
                          format: int32
                          example: 0
                      startingBeat:
                          type: integer
                          format: int32
                          example: 7
                      interval:
                          type: integer
                          format: int32
                          example: 4
                  required:
                      - startingBeat
        TempoType:
            description: The type of tempo units. In the future will allow classical Italian tempo indicators (Grave - Prestissimo).
            type: string
            enum:
                - bpm
            example: bpm
        Tempo:
            type: object
            properties:
                type:
                    $ref: '#/components/schemas/TempoType'
                units:
                    type: integer
                    format: int32
                    example: 120
        LengthType:
            description: The type of length units. In the future will allow absolute time in seconds.
            type: string
            enum:
                - measures
            example: measures
        Length:
            type: object
            properties:
                type:
                    $ref: '#/components/schemas/LengthType'
                units:
                    type: integer
                    format: int32
                    example: 2
        TimeSignature:
            type: array
            items:
                type: integer
                format: int32
            minItems: 2
            maxItems: 2
            example: [4, 4]
        Mode:
            description: One of the western modes, or scales plus 'chromatic' (all possible pitches) and 'whole' (the whole tone scale).
            type: string
            example: ionian
            enum:
                - chromatic
                - whole
                - ionian
                - dorian
                - phrygian
                - lydian
                - mixolydian
                - aeolian
                - locrian
        MotifMeta:
            type: object
            properties:
                key:
                    $ref: '#/components/schemas/NoteName'
                mode:
                    $ref: '#/components/schemas/Mode'
                tempo:
                    $ref: '#/components/schemas/Tempo'
                timeSignature:
                    $ref: '#/components/schemas/TimeSignature'
            required:
                - tempo
                - timeSignature
        Motif:
            type: object
            properties:
                id:
                    type: string
                    example: 39i7d98hs2
                name:
                    type: string
                    example: my-motif
                meta:
                    $ref: '#/components/schemas/MotifMeta'
                notes:
                    type: array
                    items:
                        $ref: '#/components/schemas/Note'
            required:
                - notes
                - meta
        Transformation:
            type: object
            properties:
                type:
                    type: string
                    description: name of the transformation operation
                    example: reverse
                params:
                    type: array
                    items:
                        nullable: true
                        oneOf:
                            - type: boolean
                            - type: integer
                              example: true
        JsonApiResponseRequest:
            type: object
            description: returning the request information as part of the response for client convenience
            properties:
                headers:
                    type: object
                    description: the request headers
                method:
                    type: string
                    description: the http request method
                    default: POST
                url:
                    type: string
                    description: relative url path
                body:
                    type: object
                    description: request body
        JsonApiResponse:
            type: object
            properties:
                request:
                    $ref: '#/components/schemas/JsonApiResponseRequest'
                response:
                    $ref: '#/components/schemas/Motif'
    requestBodies:
        RandomMotif:
            description: Request body to generate a random motif based on input parameters
            content:
                application/json:
                    schema:
                        properties:
                            key:
                                $ref: '#/components/schemas/NoteName'
                            mode:
                                $ref: '#/components/schemas/Mode'
                            octave:
                                $ref: '#/components/schemas/OctaveRange'
                            leap:
                                $ref: '#/components/schemas/LeapRange'
                            duration:
                                $ref: '#/components/schemas/DurationRange'
                            timeSignature:
                                $ref: '#/components/schemas/TimeSignature'
                            tempo:
                                $ref: '#/components/schemas/Tempo'
                            length:
                                $ref: '#/components/schemas/Length'
            required: true
        TransformMotif:
            description: Request body to generate a transformed motif based on input parameters
            content:
                application/json:
                    schema:
                        properties:
                            melody:
                                $ref: '#/components/schemas/Motif'
                            transformations:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Transformation'
            required: true
        MotifAudioFile:
            description: Request body to convert a JSON motif into a WAV file
            content:
                application/json:
                    schema:
                        properties:
                            motif:
                                $ref: '#/components/schemas/Motif'
                            voice:
                                type: string
                                enum:
                                    - sine
                                    - triangle
                                    - square
                                    - sawtooth
            required: true
    headers:
        access-control-allow-headers:
            schema:
                type: string
        access-control-allow-origin:
            schema:
                type: string
        cache-control:
            schema:
                type: string
        content-type:
            schema:
                type: string
